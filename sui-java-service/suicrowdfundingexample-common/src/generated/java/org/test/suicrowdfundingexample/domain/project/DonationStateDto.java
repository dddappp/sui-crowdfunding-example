// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.suicrowdfundingexample.domain.project;

import java.util.*;
import java.math.*;
import java.math.BigInteger;
import java.util.Date;
import org.test.suicrowdfundingexample.domain.*;
import org.test.suicrowdfundingexample.specialization.*;


public class DonationStateDto {

    private String donator;

    public String getDonator()
    {
        return this.donator;
    }

    public void setDonator(String donator)
    {
        this.donator = donator;
    }

    private BigInteger amount;

    public BigInteger getAmount()
    {
        return this.amount;
    }

    public void setAmount(BigInteger amount)
    {
        this.amount = amount;
    }

    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }

    private Long offChainVersion;

    public Long getOffChainVersion()
    {
        return this.offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion)
    {
        this.offChainVersion = offChainVersion;
    }

    private String projectId;

    public String getProjectId()
    {
        return this.projectId;
    }

    public void setProjectId(String projectId)
    {
        this.projectId = projectId;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private Date createdAt;

    public Date getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private Date updatedAt;

    public Date getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt)
    {
        this.updatedAt = updatedAt;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public DonationStateDto[] toDonationStateDtoArray(Iterable<DonationState> states) {
            return toDonationStateDtoList(states).toArray(new DonationStateDto[0]);
        }

        public List<DonationStateDto> toDonationStateDtoList(Iterable<DonationState> states) {
            ArrayList<DonationStateDto> stateDtos = new ArrayList();
            for (DonationState s : states) {
                DonationStateDto dto = toDonationStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public DonationStateDto toDonationStateDto(DonationState state)
        {
            if(state == null) {
                return null;
            }
            DonationStateDto dto = new DonationStateDto();
            if (returnedFieldsContains("Donator")) {
                dto.setDonator(state.getDonator());
            }
            if (returnedFieldsContains("Amount")) {
                dto.setAmount(state.getAmount());
            }
            if (returnedFieldsContains("Active")) {
                dto.setActive(state.getActive());
            }
            if (returnedFieldsContains("OffChainVersion")) {
                dto.setOffChainVersion(state.getOffChainVersion());
            }
            if (returnedFieldsContains("ProjectId")) {
                dto.setProjectId(state.getProjectId());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            return dto;
        }

    }
}

