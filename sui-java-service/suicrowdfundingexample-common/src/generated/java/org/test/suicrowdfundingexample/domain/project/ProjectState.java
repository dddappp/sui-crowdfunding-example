// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.suicrowdfundingexample.domain.project;

import java.util.*;
import java.math.*;
import java.math.BigInteger;
import java.util.Date;
import org.test.suicrowdfundingexample.domain.*;
import org.test.suicrowdfundingexample.specialization.Event;

public interface ProjectState extends VersionedSuiMoveObject
{
    Long VERSION_ZERO = 0L;

    Long VERSION_NULL = VERSION_ZERO - 1;

    String getId();

    String getOwner();

    String getTitle();

    String getDescription();

    BigInteger getTarget();

    BigInteger getDeadline();

    String getImage();

    java.math.BigInteger getVault();

    Long getOffChainVersion();

    String getCreatedBy();

    Date getCreatedAt();

    String getUpdatedBy();

    Date getUpdatedAt();

    Boolean getActive();

    Boolean getDeleted();

    String getTypeArgumentT();

    EntityStateCollection<String, DonationState> getDonations();

    interface MutableProjectState extends ProjectState, VersionedSuiMoveObject.MutableVersionedSuiMoveObject {
        void setId(String id);

        void setOwner(String owner);

        void setTitle(String title);

        void setDescription(String description);

        void setTarget(BigInteger target);

        void setDeadline(BigInteger deadline);

        void setImage(String image);

        void setVault(java.math.BigInteger vault);

        void setOffChainVersion(Long offChainVersion);

        void setCreatedBy(String createdBy);

        void setCreatedAt(Date createdAt);

        void setUpdatedBy(String updatedBy);

        void setUpdatedAt(Date updatedAt);

        void setActive(Boolean active);

        void setDeleted(Boolean deleted);

        void setTypeArgumentT(String typeArgumentT);


        void mutate(Event e);

        //void when(ProjectEvent.ProjectStateCreated e);

        //void when(ProjectEvent.ProjectStateMergePatched e);

        //void when(ProjectEvent.ProjectStateDeleted e);
    }

    interface SqlProjectState extends MutableProjectState {

        boolean isStateUnsaved();

        boolean getForReapplying();
    }
}

